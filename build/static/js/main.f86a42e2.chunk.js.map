{"version":3,"sources":["Screens/components/Loader.js","config/constants.js","Screens/Home.js","Screens/components/Header.js","Screens/components/Message.js","Screens/Chat.js","Screens/components/User.js","Screens/Users.js","config/router.js","App.js","index.js","assets/loader3.gif"],"names":["Loader","id","width","src","require","constants","BASE_URL","Home","props","useState","name","setName","isLoading","setIsLoading","e","a","preventDefault","fetch","response","json","status","Error","message","localStorage","setItem","JSON","stringify","user","history","push","Swal","fire","Container","className","Form","onSubmit","InputGroup","FormControl","value","onChange","target","type","placeholder","Button","withRouter","otherUser","parse","getItem","onClick","replace","Message","backgroundColor","alignSelf","ListGroupItem","style","color","children","GLOBAL","Chat","state","messages","fetchMessages","room","body","_id","options","method","headers","setState","setupListener","socket","io","payload","on","emit","handleChange","sendMessage","this","ListGroup","overflowY","map","item","console","log","Component","User","data","defaultProps","Users","users","setUsers","handleClick","user1","user2","useEffect","fetchUsers","key","App","exact","path","component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"6RAUeA,MARf,WACE,OACE,yBAAKC,GAAG,oBACN,yBAAKC,MAAM,QAAQC,IAAKC,EAAQ,QCDvBC,EAJG,CAChBC,SAAU,wCC+DGC,MAnDf,SAAcC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACZC,EADY,KACNC,EADM,OAEeF,oBAAS,GAFxB,mBAEZG,EAFY,KAEDC,EAFC,iDAInB,WAA4BC,GAA5B,iBAAAC,EAAA,6DACED,EAAEE,iBADJ,SAIIH,GAAa,GAJjB,SAM2BI,MAAM,GAAD,OACvBZ,EAAUC,SADa,0BACaI,IAP7C,cAMUQ,EANV,gBASuBA,EAASC,OAThC,UASUA,EATV,OAW4B,MAApBD,EAASE,OAXjB,uBAYY,IAAIC,MAAMF,EAAKG,SAZ3B,QAeIC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUP,EAAKQ,OAEjDnB,EAAMoB,QAAQC,KAAK,UAjBvB,kDAmBIC,IAAKC,KAAK,SAAU,KAAET,QAAS,SAnBnC,QAsBET,GAAa,GAtBf,2DAJmB,sBAiCnB,OACE,kBAACmB,EAAA,EAAD,CAAWC,UAAU,4DACnB,kBAACC,EAAA,EAAD,CAAMC,SAnCS,4CAmCeF,UAAU,SACtC,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAO5B,EACP6B,SAVV,SAAsBzB,GACpBH,EAAQG,EAAE0B,OAAOF,QAUTG,KAAK,OACLC,YAAY,uBAEd,kBAACC,EAAA,EAAD,CAAQF,KAAK,UAAb,YAGH7B,GAAa,kBAAC,EAAD,Q,0ECpCLgC,mBAnBf,SAAgBpC,GACd,IAAMqC,EAAYpB,KAAKqB,MAAMvB,aAAawB,QAAQ,cAAgB,IAC5DpB,EAAOF,KAAKqB,MAAMvB,aAAawB,QAAQ,SAAW,IAMxD,OACE,yBAAK9C,GAAG,oBACN,+CAAqB4C,EAAUnC,MAC/B,yBAAKuB,UAAU,6BACb,0BAAMA,UAAU,QAAQN,EAAKjB,MAC7B,kBAACiC,EAAA,EAAD,CAAQK,QATd,WACExC,EAAMoB,QAAQqB,QAAQ,OAQlB,e,QCKOC,MAnBf,SAAiB1C,GACf,IAAI2C,EAAkB,UAClBC,EAAY,WAOhB,MALmB,UAAf5C,EAAMiC,OACRU,EAAkB,UAClBC,EAAY,cAIZ,kBAACC,EAAA,EAAD,CACEpB,UAAU,OACVqB,MAAO,CAAEH,kBAAiBI,MAAO,QAASrD,MAAO,MAAOkD,cAEvD5C,EAAMgD,WCAPC,EAAS,GA8NAC,E,2MA3NbC,MAAQ,CACNC,SAAU,GACVtC,QAAS,GACTV,WAAW,G,EAQbiD,c,sBAAgB,sCAAA9C,EAAA,sEAEN+C,EAAOrC,KAAKqB,MAAMvB,aAAawB,QAAQ,SACvCpB,EAAOF,KAAKqB,MAAMvB,aAAawB,QAAQ,SAEvCgB,EAAO,CACXD,KAAMA,EAAKE,IACXrC,KAAMA,EAAKqC,KAGPC,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBJ,KAAMtC,KAAKC,UAAUqC,IAfX,SAkBW9C,MAAM,GAAD,OACvBZ,EAAUC,SADa,qBAE1B2D,GApBU,cAkBN/C,EAlBM,iBAsBOA,EAASC,OAtBhB,QAsBNA,EAtBM,OAwBZ,EAAKiD,SAAS,CAAER,SAAUzC,EAAKyC,WAxBnB,kDA0BZ9B,IAAKC,KAAK,SAAU,KAAET,QAAS,SA1BnB,iCA6BP,CAAEA,QAAS,YA7BJ,0D,EAgChB+C,cAAgB,WACd,IAAMC,EAASC,IAAG,GAAD,OAAIlE,EAAUC,SAAd,UACjBmD,EAAOa,OAASA,EAEhB,IAAMR,EAAOrC,KAAKqB,MAAMvB,aAAawB,QAAQ,SAGvCyB,EAAU,CACd7C,KAHWF,KAAKqB,MAAMvB,aAAawB,QAAQ,SAGhCiB,IACXF,KAAMA,EAAKE,KAGbM,EAAOG,GAAG,WAAW,WACnBH,EAAOI,KAAK,YAAaF,MAG3BF,EAAOG,GAAG,eAAe,SAAAD,GAAY,IAC3BZ,EAAa,EAAKD,MAAlBC,SAER,EAAKQ,SAAS,CACZR,SAAS,GAAD,mBACHA,GADG,CAEN,CAAEtC,QAASkD,EAAQlD,QAASK,KAAM6C,EAAQ7C,c,EAMlDgD,aAAe,SAAA7D,GACb,EAAKsD,SAAS,CAAE9C,QAASR,EAAE0B,OAAOF,S,EAGpCsC,Y,uCAAc,WAAM9D,GAAN,2BAAAC,EAAA,wDACkB,EAAK4C,MAA3BC,EADI,EACJA,SAAUtC,EADN,EACMA,QAClBR,EAAEE,iBAEIW,EAAOF,KAAKqB,MAAMvB,aAAawB,QAAQ,SACvCe,EAAOrC,KAAKqB,MAAMvB,aAAawB,QAAQ,SACvCF,EAAYpB,KAAKqB,MAAMvB,aAAawB,QAAQ,cAE5CyB,EAAU,CACdlD,UACAK,KAAMA,EAAKqC,IACXF,KAAMA,EAAKE,IACXnB,UAAWA,EAAUmB,KAGvB,EAAKI,SAAS,CAAER,SAAS,GAAD,mBAAMA,GAAN,CAAgB,CAAEtC,UAASK,KAAMA,EAAKqC,SAC9DP,EAAOa,OAAOI,KAAK,cAAeF,GAhBtB,2C,mQApENK,KAAKhB,gB,OACXgB,KAAKR,gB,qIAsFG,IAAD,EACuBQ,KAAKlB,MAA3BC,EADD,EACCA,SAAUtC,EADX,EACWA,QACZK,EAAOF,KAAKqB,MAAMvB,aAAawB,QAAQ,SAASiB,IAEtD,OACE,kBAAChC,EAAA,EAAD,CAAWC,UAAU,8BACnB,kBAAC,EAAD,MACA,kBAAC6C,EAAA,EAAD,CACE7C,UAAU,sCACVqB,MAAO,CAAEyB,UAAW,SAEnBnB,EAASoB,KAAI,SAAAC,GAKZ,OAJAC,QAAQC,IAAI,eAAgBF,EAAKtD,MACjCuD,QAAQC,IAAI,UAAWxD,GACvBuD,QAAQC,IAAI,wBAAyBF,EAAKtD,OAASA,GAGjD,kBAAC,EAAD,CAASc,KAAMwC,EAAKtD,OAASA,EAAO,OAAS,SAC1CsD,EAAK3D,aAKd,kBAACY,EAAA,EAAD,CAAMC,SAAU0C,KAAKD,YAAa3C,UAAU,QAC1C,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAOhB,EACPiB,SAAUsC,KAAKF,aACflC,KAAK,OACLC,YAAY,qBAEd,kBAACC,EAAA,EAAD,CAAQF,KAAK,UAAb,e,GA9HO2C,aChBnB,SAASC,EAAK7E,GACZ,OACE,kBAAC6C,EAAA,EAAD,CAAeL,QAAS,kBAAMxC,EAAMwC,QAAQxC,EAAM8E,QAC/C9E,EAAMgD,UAKb6B,EAAKE,aAAe,CAClBvC,QAAS,cAGIqC,QCyEAG,MAhFf,SAAehF,GAAQ,IAAD,EACMC,mBAAS,IADf,mBACbgF,EADa,KACNC,EADM,OAEcjF,oBAAS,GAFvB,mBAEbG,EAFa,KAEFC,EAFE,iDAQpB,gCAAAE,EAAA,6DACQY,EAAOF,KAAKqB,MAAMvB,aAAawB,QAAQ,SAD/C,SAIIlC,GAAa,GAJjB,SAM2BI,MAAM,GAAD,OACvBZ,EAAUC,SADa,2BACcqB,EAAKqC,MAPnD,cAMU9C,EANV,gBASuBA,EAASC,OAThC,UASUA,EATV,OAW4B,MAApBD,EAASE,OAXjB,uBAYY,IAAIC,MAAMF,EAAKG,SAZ3B,QAeIoE,EAASvE,EAAKsE,OAflB,kDAiBI3D,IAAKC,KAAK,SAAU,KAAET,QAAS,SAjBnC,QAoBET,GAAa,GApBf,2DARoB,+BA+BL8E,EA/BK,8EA+BpB,WAA2B9C,GAA3B,uBAAA9B,EAAA,sEAEIF,GAAa,GAEPc,EAAOF,KAAKqB,MAAMvB,aAAawB,QAAQ,SACvCgB,EAAO,CACX6B,MAAOjE,EAAKqC,IACZ6B,MAAOhD,EAAUmB,KAGbC,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBJ,KAAMtC,KAAKC,UAAUqC,IAf3B,SAkB2B9C,MAAM,GAAD,OAAIZ,EAAUC,SAAd,aAAmC2D,GAlBnE,cAkBU/C,EAlBV,iBAmBuBA,EAASC,OAnBhC,WAmBUA,EAnBV,OAqB4B,MAApBD,EAASE,OArBjB,uBAsBY,IAAIC,MAAMF,EAAKG,SAtB3B,QAyBI4D,QAAQC,IAAIhE,GACZI,aAAaC,QAAQ,OAAQC,KAAKC,UAAUP,EAAK2C,OACjDvC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUmB,IAEjDrC,EAAMoB,QAAQC,KAAK,SA7BvB,kDA+BIC,IAAKC,KAAK,SAAU,KAAET,QAAS,SA/BnC,QAkCET,GAAa,GAlCf,2DA/BoB,sBAoEpB,OAhEAiF,qBAAU,YAJU,mCAKlBC,KACC,IA+DD,kBAAC/D,EAAA,EAAD,CAAWC,UAAU,QAClBwD,EAAMT,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CAAMe,IAAKf,EAAKjB,IAAKsB,KAAML,EAAMjC,QAAS2C,GACvCV,EAAKvE,SAGTE,GAAa,kBAAC,EAAD,QC5EL,SAASqF,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7F,IACjC,kBAAC,IAAD,CAAO4F,KAAK,SAASC,UAAWZ,IAChC,kBAAC,IAAD,CAAOW,KAAK,QAAQC,UAAW1C,MCLxBuC,MAJf,WACE,OAAO,kBAAC,EAAD,OCETI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,6ECPjDC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.f86a42e2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div id=\"loader-container\">\r\n      <img width=\"120px\" src={require(\"../../assets/loader3.gif\")} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","const constants = {\r\n  BASE_URL: \"https://izaan-chat-app.herokuapp.com\"\r\n};\r\n\r\nexport default constants;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport Loader from \"./components/Loader\";\r\nimport constants from \"../config/constants\";\r\n\r\nfunction Home(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const response = await fetch(\r\n        `${constants.BASE_URL}/api/user?name=${name}`\r\n      );\r\n      const json = await response.json();\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(json.message);\r\n      }\r\n\r\n      localStorage.setItem(\"user\", JSON.stringify(json.user));\r\n\r\n      props.history.push(\"/users\");\r\n    } catch (e) {\r\n      Swal.fire(\"Error!\", e.message, \"error\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <Container className=\"h-100vh d-flex justify-content-center align-items-center\">\r\n      <Form onSubmit={handleSubmit} className=\"w-100\">\r\n        <InputGroup>\r\n          <FormControl\r\n            value={name}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter your name...\"\r\n          />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </InputGroup>\r\n      </Form>\r\n      {isLoading && <Loader />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  const otherUser = JSON.parse(localStorage.getItem(\"otherUser\") || {});\r\n  const user = JSON.parse(localStorage.getItem(\"user\") || {});\r\n\r\n  function handleLogout() {\r\n    props.history.replace(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div id=\"header-container\">\r\n      <span>Chatting with {otherUser.name}</span>\r\n      <div className=\"d-flex align-items-center\">\r\n        <span className=\"mr-2\">{user.name}</span>\r\n        <Button onClick={handleLogout}>Logout</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport { ListGroupItem } from \"react-bootstrap\";\r\n\r\nfunction Message(props) {\r\n  let backgroundColor = \"#3498db\";\r\n  let alignSelf = \"flex-end\";\r\n\r\n  if (props.type === \"other\") {\r\n    backgroundColor = \"#2ecc71\";\r\n    alignSelf = \"flex-start\";\r\n  }\r\n\r\n  return (\r\n    <ListGroupItem\r\n      className=\"my-1\"\r\n      style={{ backgroundColor, color: \"white\", width: \"80%\", alignSelf }}\r\n    >\r\n      {props.children}\r\n    </ListGroupItem>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  ListGroup,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport io from \"socket.io-client\";\r\nimport Header from \"./components/Header\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport Loader from \"./components/Loader\";\r\nimport constants from \"../config/constants\";\r\nimport Message from \"./components/Message\";\r\n\r\nconst GLOBAL = {};\r\n\r\nclass Chat extends Component {\r\n  state = {\r\n    messages: [],\r\n    message: \"\",\r\n    isLoading: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.fetchMessages();\r\n    this.setupListener();\r\n  }\r\n\r\n  fetchMessages = async () => {\r\n    try {\r\n      const room = JSON.parse(localStorage.getItem(\"room\"));\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n      const body = {\r\n        room: room._id,\r\n        user: user._id\r\n      };\r\n\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      };\r\n\r\n      const response = await fetch(\r\n        `${constants.BASE_URL}/api/user/message`,\r\n        options\r\n      );\r\n      const json = await response.json();\r\n\r\n      this.setState({ messages: json.messages });\r\n    } catch (e) {\r\n      Swal.fire(\"Error!\", e.message, \"error\");\r\n    }\r\n\r\n    return { message: \"success\" };\r\n  };\r\n\r\n  setupListener = () => {\r\n    const socket = io(`${constants.BASE_URL}/chat`);\r\n    GLOBAL.socket = socket;\r\n\r\n    const room = JSON.parse(localStorage.getItem(\"room\"));\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    const payload = {\r\n      user: user._id,\r\n      room: room._id\r\n    };\r\n\r\n    socket.on(\"connect\", () => {\r\n      socket.emit(\"room-join\", payload);\r\n    });\r\n\r\n    socket.on(\"new-message\", payload => {\r\n      const { messages } = this.state;\r\n\r\n      this.setState({\r\n        messages: [\r\n          ...messages,\r\n          { message: payload.message, user: payload.user }\r\n        ]\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ message: e.target.value });\r\n  };\r\n\r\n  sendMessage = async e => {\r\n    const { messages, message } = this.state;\r\n    e.preventDefault();\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const room = JSON.parse(localStorage.getItem(\"room\"));\r\n    const otherUser = JSON.parse(localStorage.getItem(\"otherUser\"));\r\n\r\n    const payload = {\r\n      message,\r\n      user: user._id,\r\n      room: room._id,\r\n      otherUser: otherUser._id\r\n    };\r\n\r\n    this.setState({ messages: [...messages, { message, user: user._id }] });\r\n    GLOBAL.socket.emit(\"new-message\", payload);\r\n  };\r\n\r\n  render() {\r\n    const { messages, message } = this.state;\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))._id;\r\n\r\n    return (\r\n      <Container className=\"h-100vh d-flex flex-column\">\r\n        <Header />\r\n        <ListGroup\r\n          className=\"my-2 d-flex flex-column flex-grow-1\"\r\n          style={{ overflowY: \"auto\" }}\r\n        >\r\n          {messages.map(item => {\r\n            console.log(\"item.user =>\", item.user);\r\n            console.log(\"user =>\", user);\r\n            console.log(\"item.user === user =>\", item.user === user);\r\n\r\n            return (\r\n              <Message type={item.user === user ? \"self\" : \"other\"}>\r\n                {item.message}\r\n              </Message>\r\n            );\r\n          })}\r\n        </ListGroup>\r\n        <Form onSubmit={this.sendMessage} className=\"my-2\">\r\n          <InputGroup>\r\n            <FormControl\r\n              value={message}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Enter message...\"\r\n            />\r\n            <Button type=\"submit\">Send</Button>\r\n          </InputGroup>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// function Chat() {\r\n//   console.log(\"chat\");\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [messages, setMessages] = useState([{ message: \"I\" }]);\r\n\r\n//   useEffect(() => {\r\n//     handleMount();\r\n//   }, []);\r\n\r\n//   function handleMount() {\r\n//     console.log(\"mount\");\r\n//     const socket = io(\"http://localhost:5000/chat\");\r\n//     GLOBAL.socket = socket;\r\n\r\n//     const room = JSON.parse(localStorage.getItem(\"room\"));\r\n//     const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n//     const payload = {\r\n//       user: user._id,\r\n//       room: room._id\r\n//     };\r\n\r\n//     console.log(payload);\r\n//     socket.on(\"connect\", () => {\r\n//       socket.emit(\"room-join\", payload);\r\n//     });\r\n\r\n//     socket.on(\"new-message\", handleNewMessage);\r\n//   }\r\n\r\n//   function handleNewMessage(payload) {\r\n//     console.log(\"new Message =>\", payload);\r\n//     console.log(\"messages =>\", messages);\r\n//     setMessages([...messages, { message: payload.message }]);\r\n//   }\r\n\r\n//   function handleChange(e) {\r\n//     setMessage(e.target.value);\r\n//   }\r\n\r\n//   async function sendMessage(e) {\r\n//     e.preventDefault();\r\n\r\n//     console.log(\"GLOBAL =>\", GLOBAL);\r\n//     const user = JSON.parse(localStorage.getItem(\"user\"));\r\n//     const room = JSON.parse(localStorage.getItem(\"room\"));\r\n//     const otherUser = JSON.parse(localStorage.getItem(\"otherUser\"));\r\n\r\n//     const payload = {\r\n//       message,\r\n//       user: user._id,\r\n//       room: room._id,\r\n//       otherUser: otherUser._id\r\n//     };\r\n\r\n//     console.log(\"payload =>\", payload);\r\n//     console.log(\"messages =>\", messages);\r\n//     setMessages([...messages, { message }]);\r\n//     GLOBAL.socket.emit(\"new-message\", payload);\r\n//   }\r\n\r\n//   return (\r\n//     <Container className=\"h-100vh d-flex flex-column\">\r\n//       <ListGroup\r\n//         className=\"my-2 d-flex flex-column flex-grow-1\"\r\n//         style={{ overflowY: \"auto\" }}\r\n//       >\r\n//         {messages.map(item => (\r\n//           <Message>{item.message}</Message>\r\n//         ))}\r\n//       </ListGroup>\r\n//       <Form onSubmit={sendMessage} className=\"my-2\">\r\n//         <InputGroup>\r\n//           <FormControl\r\n//             value={message}\r\n//             onChange={handleChange}\r\n//             type=\"text\"\r\n//             placeholder=\"Enter message...\"\r\n//           />\r\n//           <Button type=\"submit\">Send</Button>\r\n//         </InputGroup>\r\n//       </Form>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { ListGroupItem } from \"react-bootstrap\";\r\n\r\nfunction User(props) {\r\n  return (\r\n    <ListGroupItem onClick={() => props.onClick(props.data)}>\r\n      {props.children}\r\n    </ListGroupItem>\r\n  );\r\n}\r\n\r\nUser.defaultProps = {\r\n  onClick: function() {}\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport Loader from \"./components/Loader\";\r\nimport constants from \"../config/constants\";\r\nimport User from \"./components/User\";\r\n\r\nfunction Users(props) {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const response = await fetch(\r\n        `${constants.BASE_URL}/api/users?user=${user._id}`\r\n      );\r\n      const json = await response.json();\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(json.message);\r\n      }\r\n\r\n      setUsers(json.users);\r\n    } catch (e) {\r\n      Swal.fire(\"Error!\", e.message, \"error\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  async function handleClick(otherUser) {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const body = {\r\n        user1: user._id,\r\n        user2: otherUser._id\r\n      };\r\n\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      };\r\n\r\n      const response = await fetch(`${constants.BASE_URL}/api/room`, options);\r\n      const json = await response.json();\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(json.message);\r\n      }\r\n\r\n      console.log(json);\r\n      localStorage.setItem(\"room\", JSON.stringify(json.room));\r\n      localStorage.setItem(\"otherUser\", JSON.stringify(otherUser));\r\n\r\n      props.history.push(\"/chat\");\r\n    } catch (e) {\r\n      Swal.fire(\"Error!\", e.message, \"error\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Container className=\"my-2\">\r\n      {users.map(item => (\r\n        <User key={item._id} data={item} onClick={handleClick}>\r\n          {item.name}\r\n        </User>\r\n      ))}\r\n      {isLoading && <Loader />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"../Screens/Home\";\r\nimport Chat from \"../Screens/Chat\";\r\nimport Users from \"../Screens/Users\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/users\" component={Users} />\r\n        <Route path=\"/chat\" component={Chat} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport Router from \"./config/router\";\n\nfunction App() {\n  return <Router />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/loader3.6482bfd7.gif\";"],"sourceRoot":""}